@page
@model MiniAccountManagementSystem.Pages.Vouchers.VoucherEntryPageModel
@{
}

<h2>Voucher Entry</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}

<form method="post">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="mb-3">
        <label asp-for="Voucher.VoucherType" class="form-label">Voucher Type</label>
        <select asp-for="Voucher.VoucherType" class="form-select" required>
            <option value="">-- Select Voucher Type --</option>
            <option value="Journal">Journal</option>
            <option value="Payment">Payment</option>
            <option value="Receipt">Receipt</option>
        </select>
        <span asp-validation-for="Voucher.VoucherType" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Voucher.VoucherDate" class="form-label">Voucher Date</label>
        <input asp-for="Voucher.VoucherDate" type="date" class="form-control" />
        <span asp-validation-for="Voucher.VoucherDate" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Voucher.ReferenceNo" class="form-label">Reference No.</label>
        <input asp-for="Voucher.ReferenceNo" type="text" class="form-control" />
        <span asp-validation-for="Voucher.ReferenceNo" class="text-danger"></span>
    </div>

    <h4>Voucher Entries</h4>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Account</th>
                <th>Debit Amount</th>
                <th>Credit Amount</th>
                <th>Narration</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="voucherEntriesBody">
            @for (int i = 0; i < Model.Voucher.VoucherEntries.Count; i++)
            {
                <tr>
                    <td>
                        <select asp-for="@Model.Voucher.VoucherEntries[i].AccountId" class="form-select" required>
                            <option value="">-- Select Account --</option>
                            @foreach (var account in Model.Accounts)
                            {
                                <option value="@account.AccountId" selected="@(account.AccountId == Model.Voucher.VoucherEntries[i].AccountId ? "selected" : null)">
                                    @account.AccountName
                                </option>
                            }
                        </select>
                        <span asp-validation-for="@Model.Voucher.VoucherEntries[i].AccountId" class="text-danger"></span>
                    </td>
                    <td>
                        <input asp-for="@Model.Voucher.VoucherEntries[i].DebitAmount" type="number" step="0.01" min="0" class="form-control" />
                        <span asp-validation-for="@Model.Voucher.VoucherEntries[i].DebitAmount" class="text-danger"></span>
                    </td>
                    <td>
                        <input asp-for="@Model.Voucher.VoucherEntries[i].CreditAmount" type="number" step="0.01" min="0" class="form-control" />
                        <span asp-validation-for="@Model.Voucher.VoucherEntries[i].CreditAmount" class="text-danger"></span>
                    </td>
                    <td>
                        <input asp-for="@Model.Voucher.VoucherEntries[i].Narration" type="text" class="form-control" />
                        <span asp-validation-for="@Model.Voucher.VoucherEntries[i].Narration" class="text-danger"></span>
                    </td>
                    <td>
                        <button type="button" class="btn btn-danger btn-sm" onclick="removeEntry(this)">Remove</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <button type="button" class="btn btn-primary" onclick="addEntry()">Add Entry</button>

    <div class="mt-3">
        <button type="submit" class="btn btn-success">Save Voucher</button>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function addEntry() {
            var tbody = document.getElementById('voucherEntriesBody');
            var lastRow = tbody.rows[tbody.rows.length - 1];
            var newRow = lastRow.cloneNode(true);

            var inputs = newRow.querySelectorAll('input, select');
            inputs.forEach(function (input) {
                if (input.tagName === 'SELECT') {
                    input.selectedIndex = 0;
                } else {
                    input.value = '';
                }
            });

            var index = tbody.rows.length;
            inputs.forEach(function (input) {
                var name = input.getAttribute('name');
                if (name) {
                    var newName = name.replace(/\[\d+\]/, '[' + index + ']');
                    input.setAttribute('name', newName);
                    input.setAttribute('id', newName.replace('.', '_'));
                }
            });

            tbody.appendChild(newRow);
        }

        function removeEntry(button) {
            var tbody = document.getElementById('voucherEntriesBody');
            if (tbody.rows.length > 1) {
                var row = button.closest('tr');
                tbody.removeChild(row);
            } else {
                alert('At least one voucher entry is required.');
            }
        }
    </script>
}
